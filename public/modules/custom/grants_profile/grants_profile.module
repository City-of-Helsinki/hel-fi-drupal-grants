<?php

/**
 * @file
 * Primary module hooks for Grants Profile module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\grants_profile\Form\ModalApplicationOfficialForm;

/**
 * Implements hook_theme().
 */
function grants_profile_theme(): array {
  $theme['view_application'] = [
    'render element' => 'build',
    'variables' => [
      'application' => NULL,
      'submission_form' => NULL,
    ],
  ];
  $theme['own_profile'] = [
    'render element' => 'build',
    'variables' => [
      'title' => NULL,
      'content' => NULL,
      'grants_profile_form' => NULL,
      'profile' => NULL,
      'applications' => NULL,
      'colorscheme' => NULL,
      'initials' => NULL,
      'editProfileLink' => NULL,
    ],
  ];
  $theme['own_profile_form'] = [
    'render element' => 'form',
  ];
  $theme['company_select'] = [
    'render element' => 'build',
    'variables' => [
      'content' => NULL,
      'company_select_form' => NULL,
    ],
  ];
  $theme['own_addresses'] = [
    'render element' => 'build',
    'variables' => [
      'addresses' => NULL,
    ],
  ];
  $theme['application_officials'] = [
    'render element' => 'build',
    'variables' => [
      'officials' => NULL,
    ],
  ];
  $theme['bank_accounts'] = [
    'render element' => 'build',
    'variables' => [
      'bank_accounts' => NULL,
    ],
  ];
  $theme['block__grants_profile_menuitem'] = [
    'render element' => 'build',
    'template' => 'block--grants-profile-menuitem',
    'base hook' => 'block',
    'variables' => [
      'initials' => NULL,
      'notifications' => NULL,
    ],
  ];
  $theme['edit-label-with-icon'] = [
    'variables' => [
      'icon' => NULL,
      'text_label' => NULL,
    ],
  ];

  return $theme;
}

/**
 * Implements hook_cron().
 */
function grants_profile_cron() {

  // Make sure no dangling files are left over from bank account confirmations.

  /** @var \Drupal\Core\File\FileSystem $fileSystem */
  $fileSystem = \Drupal::service('file_system');

  $files = $fileSystem->scanDirectory(DRUPAL_ROOT . '/sites/default/files/private/grants_profile', '(.*?)');

  foreach ($files as $uri => $file) {

    /** @var \Drupal\file\FileInterface[] $loadedFiles */
    $loadedFiles = \Drupal::entityTypeManager()
      ->getStorage('file')
      ->loadByProperties(['uri' => $uri]);
    /** @var \Drupal\file\FileInterface|null $loadedFile */
    $loadedFile = reset($loadedFiles) ?: NULL;

    if ($loadedFile) {
      $loadedFile->delete();
    }
    else {
      unlink($uri);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function grants_profile_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Hide fields from login forms without proper query strings.
  // If we're at user login.
  if ($form_id == 'user_login_form') {
    $qParams = \Drupal::request()->query->all();
    // We want to hide all normal login elements
    // to only allow login via Tunnistamo.
    if (!isset($qParams['login']) || $qParams['login'] != 'admin') {
      unset($form['name']);
      unset($form['pass']);
      unset($form['actions']);
    }
  }
  // And from Tunnistamo, we want to allow only user logins
  // without loginparameter.
  if ($form_id == 'openid_connect_login_form') {
    $qParams = \Drupal::request()->query->all();

    if (!isset($qParams['login']) || $qParams['login'] != 'admin') {
      unset($form["openid_connect_client_tunnistamoadmin_login"]);
    }

  }
}

/**
 * Implements hook_user_logout().
 */
function grants_profile_user_logout(AccountInterface $account) {
  /** @var \Drupal\grants_profile\GrantsProfileService $profileService */
  $profileService = \Drupal::service('grants_profile.service');
  $profileService->clearCache();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function grants_profile_preprocess_own_profile(&$variables) {
  foreach ($variables['profile']['officials'] as $key => $official) {
    $officialRole = ModalApplicationOfficialForm::getOfficialRoles();
    $temprole = '' . $officialRole[(int) $official['role']];
    $variables['profile']['officials'][$key]['officialRole'] = $temprole;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function grants_profile_preprocess_own_profile_form(&$variables) {

  /** @var \Drupal\grants_profile\GrantsProfileService $grantsProfileService */
  $grantsProfileService = \Drupal::service('grants_profile.service');
  $selectedCompany = $grantsProfileService->getSelectedCompany();

  $grantsProfile = $grantsProfileService->getGrantsProfileContent($selectedCompany['identifier']);

  $variables['profile'] = $grantsProfile;

  // We need to replace ids for address / bank account / officials to
  // make delete links work.
  foreach ($variables["form"]["bankAccountWrapper"]["bankAccounts"] as $key => $value) {
    if (!str_starts_with($key, '#')) {
      if (isset($variables["form"]["bankAccountWrapper"]["bankAccounts"][$key]["deleteButton"])) {
        // If we actually have id/index for this bank account replace
        // placeholder with id.
        if ($value["bank_account_id"]["#value"] != "") {
          $link = $variables["form"]["bankAccountWrapper"]["bankAccounts"][$key]["deleteButton"]["#markup"];
          $variables["form"]["bankAccountWrapper"]["bankAccounts"][$key]["deleteButton"]["#markup"] = str_replace('%7Bbank_account_delta%7D', $value["bank_account_id"]["#value"], $link->getGeneratedLink());
        }
        else {
          // If not, do not show delete link.
          $variables["form"]["bankAccountWrapper"]["bankAccounts"][$key]["deleteButton"]["#markup"] = '';
        }
      }

      // If bank account id is no set, a new account.
      if (isset($value["bank_account_id"]) && $value["bank_account_id"]["#value"] == '') {
        $variables["form"]["bankAccountWrapper"]["bankAccounts"][$key]["confirmationFileName"]["#access"] = FALSE;
      }
      else {
        // If bank account value is set, then we are editing and
        // want to hide things.
        if (isset($value["bankAccount"]) && $value["bankAccount"]["#value"] != '') {
          // Hide confirmation file name.
          $variables["form"]["bankAccountWrapper"]["bankAccounts"][$key]["confirmationFile"]["#access"] = FALSE;
          // And make bank account readonly.
          $variables["form"]["bankAccountWrapper"]["bankAccounts"][$key]["bankAccount"]["#attributes"] = ['readonly' => 'readonly'];
        }
      }
    }
  }

  foreach ($variables["form"]["addressWrapper"]["addresses"] as $key => $value) {
    if (!str_starts_with($key, '#')) {
      if (isset($variables["form"]["addressWrapper"]["addresses"][$key]["deleteButton"])) {
        if ($value["address_id"]["#value"] != "") {
          /** @var \Drupal\Core\GeneratedLink $link */
          $link = $variables["form"]["addressWrapper"]["addresses"][$key]["deleteButton"]["#markup"];
          $variables["form"]["addressWrapper"]["addresses"][$key]["deleteButton"]["#markup"] = str_replace('%7Baddress_delta%7D', $value["address_id"]["#value"], $link->getGeneratedLink());
        }
        else {
          $variables["form"]["addressWrapper"]["addresses"][$key]["deleteButton"]["#markup"] = '';
        }
      }
    }
  }

  foreach ($variables["form"]["officialWrapper"]["officials"] as $key => $value) {
    if (!str_starts_with($key, '#')) {
      if (isset($variables["form"]["officialWrapper"]["officials"][$key]["deleteButton"])) {
        if ($value["official_id"]["#value"] != "") {
          /** @var \Drupal\Core\GeneratedLink $link */
          $link = $variables["form"]["officialWrapper"]["officials"][$key]["deleteButton"]["#markup"];
          $variables["form"]["officialWrapper"]["officials"][$key]["deleteButton"]["#markup"] = str_replace('%7Bofficial_delta%7D', $value["official_id"]["#value"], $link->getGeneratedLink());
        }
        else {
          $variables["form"]["officialWrapper"]["officials"][$key]["deleteButton"]["#markup"] = '';
        }
      }
    }
  }

}
