<?php

/**
 * @file
 * Provides an example of a webform handler.
 */


use Drupal\Core\Datetime\DrupalDateTime;
use \Drupal\Core\Form\FormStateInterface;
use Drupal\grants_handler\Plugin\WebformElement\CompensationsComposite;
use Drupal\helfi_yjdh\Exception\YjdhException;

/**
 * Implements hook_theme().
 */
function grants_handler_theme() {
  return [
    'webform_handler_grants_summary' => [
      'variables' => ['settings' => NULL, 'handler' => []],
    ],
  ];
}

/**
 * Implements hook_entity_type_alter().
 */
function grants_handler_entity_type_alter(array &$entity_types) {
  $entity_types['webform_submission']->setStorageClass('Drupal\grants_handler\GrantsHandlerSubmissionStorage');
}

/**
 * Alter webform elements.
 *
 * @param array $element
 *   Webform specific element properties include:
 *   - #webform: The element's parent webform ID.
 *   - #webform_submission: The element's related webform submission ID.
 *   - #webform_id: The element's unique webform key.
 *   - #webform_key: The element's webform key/name.
 *   - #webform_parent_key: The element's parent key/name.
 *   - #webform_parent_flexbox: TRUE if the element's parent is a
 *     flexbox container.
 *   - #webform_depth: The depth level of the element in the form's
 *     tree hierarchy.
 *   - #webform_children: An array of child element keys/names.
 *   - #webform_multiple: TRUE if element stores multiple values.
 *   - #webform_composite: TRUE if element stores composite values.
 *   - #webform_parents: An array containing the element's parent keys/names.
 *
 *   Webform specific composite sub-element properties include:
 *   - #webform_composite_id: The composite sub-element's ID.
 *   - #webform_composite_key: The composite sub-element's parent key and
 *     element key.
 *   - #webform_composite_parent_key: The composite sub-element's parent key.
 *
 *   Sub-element's can have properties defined using #SUB_ELEMENT__PROPERTY.
 *   For example, an other element's placeholder can be defined using
 *   the #other__placeholder property.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 * @param array $context
 *   An associative array containing the following key-value pairs:
 *   - form: The form structure to which elements is being attached.
 *
 * @see \Drupal\webform\WebformSubmissionForm::prepareElements()
 * @see hook_webform_element_ELEMENT_TYPE_alter()
 */
function grants_handler_webform_element_alter(array &$element, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
  // Code here acts on all elements included in a webform.
  //  /** @var \Drupal\webform\WebformSubmissionForm $form_object */
  //  $form_object = $form_state->getFormObject();
  //  /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
  //  $webform_submission = $form_object->getEntity();
  //  /** @var \Drupal\webform\WebformInterface $webform */
  //  $webform = $webform_submission->getWebform();

  // Add custom data attributes to all elements.
  //  $element['#attributes']['data-custom'] = '{custom data goes here}';
}

/**
 * Implements hook_preprocess().
 */
function grants_handler_preprocess_webform(array &$variables) {
  $r = 'asfd';
}

/**
 * Implements hook_form_alter().
 */
function grants_handler_webform_submission_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  //  // Code here acts on all elements included in a webform.
  //  /** @var \Drupal\webform\WebformSubmissionForm $form_object */
  //  $form_object = $form_state->getFormObject();
  //  /** @var \Drupal\webform\WebformSubmissionInterface $webform_submission */
  //  $webform_submission = $form_object->getEntity();
  //  /** @var \Drupal\webform\WebformInterface $webform */
  //  $webform = $webform_submission->getWebform();


  if($form_id === 'webform_submission_yleisavustushakemus_edit_all_form') {
    $d = 'adfs';
  } else if (
    $form_id === 'webform_submission_yleisavustushakemus_add_form') {
    $options = CompensationsComposite::getOptionsForTypes();

    // fast and dirty way to get this to ya form. must be fixed.
    // attempt in comments
    $element = $form["elements"]["2_avustustiedot"]["avustuslajit"]["subventions"];
    if ($element['#webform_plugin_id'] == 'grants_compensations') {

      $subventionTypes = $element["#subvention_type"];
      $subventionTypesAmount = count($subventionTypes);
      $form["elements"]["2_avustustiedot"]["avustuslajit"]["subventions"]['#cardinality'] = $subventionTypesAmount;

      foreach ($subventionTypes as $key => $value) {
        $form["elements"]["2_avustustiedot"]["avustuslajit"]["subventions"]['#default_value'][] = [
          'subvention_type' => $options[$value],
          'subvention_type_id' => $value,
        ];
      }
    }

    //    foreach ($form["elements"] as $elementName => $element) {
    //      if (!str_contains($elementName, '#')) {
    //        foreach ($element as $elementName2 => $element2) {
    //          if (!str_contains($elementName2, '#')) {
    //            foreach ($element2 as $elementName3 => $element3) {
    //              if (!str_contains($elementName3, '#')) {
    //                if ($element3['#type'] == 'grants_compensations') {
    //                  $subventionTypes = $element3["#subvention_type"];
    //                  $subventionTypesAmount = count($subventionTypes);
    //                  $form['elements'][$elementName][$elementName2][$elementName3]['#cardinality'] = $subventionTypesAmount;
    //
    //                  foreach ($subventionTypes as $key => $value) {
    //                    $form['elements'][$elementName][$elementName2][$elementName3]['#default_value'][] = [
    //                      'subvention_type' => $options[$value],
    //                      'subvention_type_id' => $value,
    //                    ];
    //                  }
    //                }
    //              }
    //            }
    //          }
    //        }
    //      }
    //    }





    /** @var \Drupal\helfi_helsinki_profiili\HelsinkiProfiiliUserData $userExternalData */
    $userExternalData = \Drupal::service('helfi_helsinki_profiili.userdata');
    $profileData = $userExternalData->getUserProfileData();

    // if not authenticated let's not do anything. This is more for admin usage than
    if ((NULL == $profileData) && !$userExternalData->isAuthenticatedExternally()) {
      \Drupal::messenger()->addWarning('No HelsinkiProfiili login found.');
      return;
    }

    /** @var \Drupal\helfi_yjdh\YjdhClient $yjdhClient */
    $yjdhClient = \Drupal::service('helfi_yjdh.client');
    try {

      $associationRoles = $yjdhClient->roleSearchWithSsn($profileData["verifiedPersonalInformation"]["nationalIdentificationNumber"]);

      $form['#prefix'] = '<div id="form_wrap">';
      $form['#suffix'] = '</div>';

      $options = [];
      foreach ($associationRoles['Role'] as $association) {
        $options[$association['BusinessId']] = $association['AssociationNameInfo'][0]['AssociationName'];
      }

      $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["company_select"]["#options"] = $options;
      $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["company_select"]["#ajax"] = [
        'callback' => 'company_select_callback',
        // don't forget :: when calling a class method.
        'disable-refocus' => FALSE,
        // Or TRUE to prevent re-focusing on the triggering element.
        'event' => 'change',
        'wrapper' => 'form_wrap',
        // This element is updated with this AJAX callback.
        'progress' => [
          'type' => 'throbber',
          'message' => 'Getting YTJ data',
        ],
      ];

    } catch (YjdhException $e) {
      \Drupal::messenger()
        ->addError('Company data fetching failed: ' . $e->getMessage());
    }
  }
}

/**
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *
 * @return array
 */
function company_select_callback(array &$form, FormStateInterface $form_state): array {

  $yjdhService = \Drupal::service('helfi_yjdh.client');
  //  /** @var \Drupal\grants_profile\GrantsProfileService $grantsProfileService */
  //  $grantsProfileService = \Drupal::service('grants_profile.service');

  $formInput = $form_state->getUserInput();

  $selectedCompanyData = $yjdhService->getAssociationBasicInfo($formInput["company_select"]);

  //  $grantsProfileContent = $grantsProfileService->getGrantsProf-ileContent($formInput["company_select"]);

  $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["company_number"]["#value"] = $selectedCompanyData['BusinessId'];
  $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["community_official_name"]["#value"] = $selectedCompanyData['AssociationNameInfo'][0]['AssociationName'];

  $regDate = new DrupalDateTime($selectedCompanyData['RegistryDate'], 'Europe/Helsinki');

  $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["registration_date"]["#value"] = $regDate->format('d.m.Y');

  $foundingYearExplode = explode('-', $selectedCompanyData['RegistryDate']);
  $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["founding_year"]["#value"] = $foundingYearExplode[0];

  $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["home"]["#value"] = $selectedCompanyData['Address'][0]['City'];

  $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["community_status"]["#value"] = $selectedCompanyData["AssociationStatus"];
  $form["elements"]["1_hakijan_tiedot"]["yhteiso_jolle_haetaan_avustusta"]["community_status_special"]["#value"] = $selectedCompanyData["AssociationSpecialCondition"];

  return $form;

}
