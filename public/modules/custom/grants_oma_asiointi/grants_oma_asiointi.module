<?php

/**
 * @file
 * Primary module hooks for Oma Asiointi module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\user\UserInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_theme().
 */
function grants_oma_asiointi_theme() {
  $theme['grants_oma_asiointi_block'] = [
    'render element' => 'build',
    'variables' => [
      'hascompany' => NULL,
      'allMessages' => NULL,
      'messages' => NULL,
      'allSubmissions' => NULL,
      'submissions' => NULL,
      'userProfileData' => NULL,
      'applicationTypes' => NULL,
      'lang' => NULL,
      'link' => NULL,
      'allMessagesLink' => NULL,
    ],
  ];
  $theme['grants_oma_asiointi_hero_block'] = [
    'render element' => 'build',
    'variables' => [
      'title' => NULL,
    ],
  ];
  $theme['grants_oma_asiointi_front'] = [
    'render element' => 'build',
    'variables' => [
      'title' => NULL,
      'drafts' => NULL,
      'others' => NULL,
      'unread' => NULL,
      'link' => NULL,
    ],
  ];

  return $theme;
}

/**
 * Implements hook_page_attachments().
 */
function grants_oma_asiointi_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'grants_oma_asiointi/grants_oma_asiointi';
}

/**
 * Implements hook_preprocess().
 */
function grants_oma_asiointi_preprocess_page_title(&$variables) {
  $variables['initials'] = 'AS';
  $variables['colorscheme'] = '0';
}

/**
 * Implements hook_views_pre_build().
 */
function grants_oma_asiointi_views_pre_build(ViewExecutable $view) {
  // Only operate on ukk view.
  if ($view->id() == 'ukk') {
    // Get the url query parameter.
    $selected = \Drupal::request()->query->get('ukk');
    // If we don't have one set.
    if (!$selected) {
      // Load all terms form ukk kats.
      $terms = \Drupal::entityTypeManager()
        ->getStorage('taxonomy_term')
        ->loadTree('ukk_kategoriat');
      $filterValueToSet = 0;
      // Set first value as selected.
      foreach ($terms as $term) {
        $filterValueToSet = (int) $term->tid;
        break;
      }
      // Only use this if we have terms.
      if ($filterValueToSet != 0) {
        $view->setExposedInput(['ukk' => $filterValueToSet]);
      }
    }
  }
}

/**
 * Implements hook_user_predelete().
 */
function grants_oma_asiointi_user_predelete(UserInterface $account) {
  $auditLogger = Drupal::service('helfi_audit_log.audit_log');

  try {
    $authdata = \Drupal::service('externalauth.authmap')->getAuthData($account->id(), 'openid_connect.tunnistamo');
    if (isset($authdata['authname'])) {
      $account->setUsername($authdata['authname']);
      $account->setEmail(NULL);
      $account->save();
    }

    $message = [
      "operation" => "GRANTS_USER_DELETE",
      "status" => "SUCCESS",
      "target" => [
        "id" => $account->id(),
        "type" => "DRUPAL_USER",
        "name" => $account->getAccountName(),
      ],
    ];
  }
  catch (\Exception $e) {
    $message = [
      "operation" => "GRANTS_USER_DELETE",
      "status" => "FAILURE",
      "target" => [
        "id" => $account->id(),
        "type" => "DRUPAL_USER",
        "name" => $account->getAccountName(),
      ],
    ];

    Drupal::logger('grants_oma_asiointi')->error('Error purging users: @error', ['@error' => $e->getMessage()]);
  }

  $auditLogger->dispatchEvent($message);
}
