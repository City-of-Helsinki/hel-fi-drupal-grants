<?php

/**
 * @file
 * Handle attachment hooks.
 */

use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\webform\Entity\WebformSubmission;

/**
 * @file
 * Primary module hooks for grants_attachments module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

/**
 * Implements hook_theme().
 */
function grants_attachments_theme(): array {
  return [
    'grants_attachments__managed_file' => [
      'hook' => 'managed_file',
      'render element' => 'element',
    ],
    'grants_attachments' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Prepares variables for webform templates.
 *
 * Default template: grants-attachments.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 */
function template_preprocess_grants_attachments(array &$variables) {

  if (isset($variables["children"]["#default_value"]["integrationID"]) &&
    $variables["children"]["#default_value"]["fileType"] != '6') {

    $currentUri = \Drupal::request()->getUri();
    $currentHost = \Drupal::request()->getSchemeAndHttpHost();
    $currentDestination = str_replace($currentHost, '', $currentUri);

    $submission = WebformSubmission::load($variables["children"]["#webform_submission"]);

    if ($submission != NULL) {
      $submissionData = $submission->getData();
    }

    // Allow only DRAFTs to be deleted.
    if (is_array($submissionData) && isset($submissionData['status']) && $submissionData['status'] == 'DRAFT') {
      $integrationId = str_replace('/', '_', $variables["children"]["#default_value"]["integrationID"]);

      if (!empty($integrationId)) {
        $deleteUrl = Url::fromRoute(
          'grants_attachments.delete_attachment',
          [
            'submission_id' => $submissionData['application_number'] ?? 'not-saved',
            'integration_id' => $integrationId,
          ],
          [
            'query' => [
              'destination' => $currentDestination,
            ],
          ]
        );
        $variables['attachmentDeleteLink'] = Link::fromTextAndUrl(t('Delete attachment'), $deleteUrl);
      }
    }
  }
}

/**
 * Implements hook_cron().
 */
function grants_attachments_cron() {

  // Get saved files from db.
  $database = \Drupal::database();
  $query = $database->query("SELECT * FROM {grants_attachments}");
  $result = $query->fetchAll();
  // Parse results into structure that uploader eats.
  $resultParsed = [];
  foreach ($result as $item) {
    $resultParsed[$item->grants_application_number]['fid'][] = $item->fid;
  }

  /**
   * @var \Drupal\grants_attachments\AttachmentRemover
   */
  $attachmentRemover = \Drupal::service('grants_attachments.attachment_remover');
  $attachmentRemover->purgeAllAttachments();
}
