<?php

/**
 * @file
 * Handle attachment hooks.
 */

/**
 * @file
 * Primary module hooks for grants_attachments module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\file\FileInterface;

/**
 * Implements hook_theme().
 */
function grants_attachments_theme(): array {
  return [
    'grants_attachments__managed_file' => [
      'hook' => 'managed_file',
      'render element' => 'element',
    ],
    'grants_attachments' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function grants_attachments_cron() {
  /** @var \Drupal\grants_attachments\AttachmentRemover $attachmentRemover */
  $attachmentRemover = \Drupal::service('grants_attachments.attachment_remover');
  $attachmentRemover->purgeAllAttachments();
}

/**
 * Implements hook_form_alter().
 */
function grants_attachments_form_alter(&$form, FormStateInterface $form_state, $form_id): void {

  // Attach a .js library that displays an "Upload pending" message under the
  // "Other attachments" section on the confirmation page of an application.
  // The message is displayed in the scenario where a bank account has been
  // selected, but said accounts confirmation file has not yet been uploaded
  // to ATV.
  if (isset($form['#webform_id'])) {
    $bankAccount = $form_state->getValue('bank_account');
    $otherAttachments = $form_state->getValue('muu_liite') ?? [];
    $selectedAccountNumber = $bankAccount['account_number_select'] ?? FALSE;
    $bankAccountChanged = FALSE;
    $noConfirmationFile = TRUE;

    foreach ($otherAttachments as $attachment) {
      if (isset($attachment['fileType']) && $attachment['fileType'] == 45) {
        $noConfirmationFile = FALSE;
        $description = $attachment['description'] ?? FALSE;

        if (is_string($selectedAccountNumber) &&
            is_string($description) &&
            !str_contains($description, $selectedAccountNumber)) {
          $bankAccountChanged = TRUE;
          break;
        }
      }
    }

    if (($selectedAccountNumber && $noConfirmationFile) || $bankAccountChanged) {
      $form['#attached']['library'][] = 'grants_attachments/pending_bank_account_confirmation';
      $form['#attached']['drupalSettings']['grants_attachments']['selectedAccountNumber'] = $selectedAccountNumber;
    }
  }
}

/**
 * Checks for files with names longer than can be stored in the ATV.
 *
 * @param \Drupal\file\FileInterface $file
 *   A file entity.
 *
 * @return array
 *   An empty array if the file name length is smaller than the limit or an
 *   array containing an error message if it's not or is empty.
 *
 * @deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. Use the
 *   'file.validator' service instead.
 *
 * @see https://www.drupal.org/node/3363700
 */
function grants_attachments_validate_name_length(FileInterface $file, $maxLength) {
  $errors = [];

  if (!$file->getFilename()) {
    $errors[] = t("The file's name is empty. Enter a name for the file.");
  }
  if (strlen($file->getFilename()) >= $maxLength) {
    $errors[] = t(
      "The file's name exceeds the @maxLength characters limit. Rename the file and try again.",
      ['@maxLength' => $maxLength],
      ['context' => 'grants_attachments'],
    );
  }
  return $errors;
}
