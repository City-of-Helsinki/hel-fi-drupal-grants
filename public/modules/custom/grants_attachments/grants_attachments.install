<?php

/**
 * @file
 * Install, update and uninstall functions for the grants_attachments module.
 */

/**
 * Implements hook_install().
 */
function grants_attachments_install() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_uninstall().
 */
function grants_attachments_uninstall() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Grants file schema.
 *
 * @return array[]
 *   Schema structure.
 */
function grants_attachments_schema(): array {
  $schema['grants_attachments'] = [
    'description' => 'Stores module data as key/value pairs per user.',
    'fields' => [
      'uid' => [
        'description' => 'The {users}.uid this record affects.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'webform_submission_id' => [
        'description' => 'Webform submission',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'grants_application_number' => [
        'description' => 'Application id',
        'type' => 'varchar',
        'length' => '40',
        'not null' => TRUE,
        'default' => '',
      ],
      'fid' => [
        'description' => 'File ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'user_hp_uuid' => [
        'description' => 'User Helsinki-profiili ID',
        'type' => 'varchar',
        'length' => '40',
        'not null' => TRUE,
        'default' => '',
      ],

    ],
    'primary key' => [
      'uid',
      'webform_submission_id',
      'fid',
    ],
  ];

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function grants_attachments_requirements($phase) {
  $requirements = [];
  $tOpts = ['context' => 'grants_attachments'];

  if ($phase == 'runtime') {
    $value = mt_rand(0, 100);
    $requirements['grants_attachments_status'] = [
      'title' => t('grants_attachments status', [], $tOpts),
      'value' => t('grants_attachments value: @value', ['@value' => $value], $tOpts),
      'severity' => $value > 50 ? REQUIREMENT_INFO : REQUIREMENT_WARNING,
    ];
  }

  return $requirements;
}

/**
 * Create upload folder for message attachments.
 */
function grants_attachments_update_9001(&$sandbox) {
  $privatePath = \Drupal::service('file_system')
    ->realpath("private://") . '/grants_messages';

  if (!file_exists($privatePath)) {
    mkdir($privatePath, 0777, TRUE);
  }

}
