/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/webform.form.unsaved.js":
/*!****************************************!*\
  !*** ./src/js/webform.form.unsaved.js ***!
  \****************************************/
/***/ (function() {

eval("/**\n * @file\n * JavaScript behaviors for unsaved webforms.\n */\n\n(function ($, Drupal) {\n  'use strict';\n\n  var unsaved = false;\n  var modal = false;\n\n  /**\n   * Unsaved changes.\n   *\n   * @type {Drupal~behavior}\n   *\n   * @prop {Drupal~behaviorAttach} attach\n   *   Attaches the behavior for unsaved changes.\n   */\n  Drupal.behaviors.webformUnsaved = {\n    clear: function () {\n      // Allow Ajax refresh/redirect to clear unsaved flag.\n      // @see Drupal.AjaxCommands.prototype.webformRefresh\n      unsaved = false;\n    },\n    get: function () {\n      // Get the current unsaved flag state.\n      return unsaved;\n    },\n    set: function (value) {\n      // Set the current unsaved flag state.\n      unsaved = value;\n    },\n    attach: function (context) {\n      // Look for the 'data-webform-unsaved' attribute which indicates that\n      // a multi-step webform has unsaved data.\n      // @see \\Drupal\\webform\\WebformSubmissionForm::buildForm\n\n      if ($('.js-webform-unsaved[data-webform-unsaved]').once('data-webform-unsaved').length) {\n        unsaved = true;\n      } else {\n        $('.js-webform-unsaved :input:not(:button, :submit, :reset, [type=\"hidden\"])').once('webform-unsaved').on('change keypress', function (event, param1) {\n          // Ignore events triggered when #states API is changed,\n          // which passes 'webform.states' as param1.\n          // @see webform.states.js ::triggerEventHandlers().\n          if (param1 !== 'webform.states') {\n            unsaved = true;\n          }\n        });\n      }\n      $('.js-webform-unsaved button, .js-webform-unsaved input[type=\"submit\"]', context).once('webform-unsaved').not('[data-webform-unsaved-ignore]').on('click', function (event) {\n        // For reset button we must confirm unsaved changes before the\n        // before unload event handler.\n        if ($(this).hasClass('webform-button--reset') && unsaved) {\n          if (!window.confirm(Drupal.t('Changes you made may not be saved.') + '\\n\\n' + Drupal.t('Press OK to leave this page or Cancel to stay.'))) {\n            return false;\n          }\n        }\n        unsaved = false;\n      });\n\n      // Add submit handler to form.beforeSend.\n      // Update Drupal.Ajax.prototype.beforeSend only once.\n      if (typeof Drupal.Ajax !== 'undefined' && typeof Drupal.Ajax.prototype.beforeSubmitWebformUnsavedOriginal === 'undefined') {\n        Drupal.Ajax.prototype.beforeSubmitWebformUnsavedOriginal = Drupal.Ajax.prototype.beforeSubmit;\n        Drupal.Ajax.prototype.beforeSubmit = function (form_values, element_settings, options) {\n          unsaved = false;\n          return this.beforeSubmitWebformUnsavedOriginal.apply(this, arguments);\n        };\n      }\n\n      // Track all CKEditor change events.\n      // @see https://ckeditor.com/old/forums/Support/CKEditor-jQuery-change-event\n      if (window.CKEDITOR && !CKEDITOR.webformUnsaved) {\n        CKEDITOR.webformUnsaved = true;\n        CKEDITOR.on('instanceCreated', function (event) {\n          event.editor.on('change', function (evt) {\n            unsaved = true;\n          });\n        });\n      }\n    }\n  };\n  $('a').on('click', function (event) {\n    let containingElement = document.querySelector('form');\n    if (unsaved && !containingElement.contains(event.target)) {\n      event.preventDefault();\n      const $previewDialog = $(`<div></div>`).appendTo('body');\n      Drupal.dialog($previewDialog, {\n        title: Drupal.t('Are you sure you want to leave? Leave without saving.'),\n        width: '33%',\n        buttons: [{\n          text: Drupal.t('Leave the application'),\n          click() {\n            unsaved = false;\n            $(this).dialog('close');\n            modal = true;\n            window.top.location.href = event.target.href;\n          }\n        }, {\n          text: Drupal.t('Back to application'),\n          buttonType: 'secondary',\n          click() {\n            $(this).dialog('close');\n          }\n        }]\n      }).showModal();\n    }\n  });\n  $(window).on('beforeunload', function () {\n    if (unsaved) {\n      return true;\n    }\n    if (modal) {\n      modal = false;\n      unsaved = true;\n    }\n  });\n\n  /**\n   * An experimental shim to partially emulate onBeforeUnload on iOS.\n   * Part of https://github.com/codedance/jquery.AreYouSure/\n   *\n   * Copyright (c) 2012-2014, Chris Dance and PaperCut Software http://www.papercut.com/\n   * Dual licensed under the MIT or GPL Version 2 licenses.\n   * http://jquery.org/license\n   *\n   * Author:  chris.dance@papercut.com\n   * Date:    19th May 2014\n   */\n  $(function () {\n    // @see https://stackoverflow.com/questions/58019463/how-to-detect-device-name-in-safari-on-ios-13-while-it-doesnt-show-the-correct\n    var isIOSorOpera = navigator.userAgent.toLowerCase().match(/iphone|ipad|ipod|opera/) || navigator.platform.toLowerCase().match(/iphone|ipad|ipod/) || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (!isIOSorOpera) {\n      return;\n    }\n    $('a:not(.use-ajax)').bind('click', function (evt) {\n      var a = $(evt.target).closest('a');\n      var href = a.attr('href');\n      if (typeof href !== 'undefined' && !(href.match(/^#/) || href.trim() === '')) {\n        if ($(window).triggerHandler('beforeunload')) {\n          if (!window.confirm(Drupal.t('Changes you made may not be saved.') + '\\n\\n' + Drupal.t('Press OK to leave this page or Cancel to stay.'))) {\n            return false;\n          }\n        }\n        var target = a.attr('target');\n        if (target) {\n          window.open(href, target);\n        } else {\n          window.location.href = href;\n        }\n        return false;\n      }\n    });\n  });\n})(jQuery, Drupal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvd2ViZm9ybS5mb3JtLnVuc2F2ZWQuanMuanMiLCJuYW1lcyI6WyIkIiwiRHJ1cGFsIiwidW5zYXZlZCIsIm1vZGFsIiwiYmVoYXZpb3JzIiwid2ViZm9ybVVuc2F2ZWQiLCJjbGVhciIsImdldCIsInNldCIsInZhbHVlIiwiYXR0YWNoIiwiY29udGV4dCIsIm9uY2UiLCJsZW5ndGgiLCJvbiIsImV2ZW50IiwicGFyYW0xIiwibm90IiwiaGFzQ2xhc3MiLCJ3aW5kb3ciLCJjb25maXJtIiwidCIsIkFqYXgiLCJwcm90b3R5cGUiLCJiZWZvcmVTdWJtaXRXZWJmb3JtVW5zYXZlZE9yaWdpbmFsIiwiYmVmb3JlU3VibWl0IiwiZm9ybV92YWx1ZXMiLCJlbGVtZW50X3NldHRpbmdzIiwib3B0aW9ucyIsImFwcGx5IiwiYXJndW1lbnRzIiwiQ0tFRElUT1IiLCJlZGl0b3IiLCJldnQiLCJjb250YWluaW5nRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRhaW5zIiwidGFyZ2V0IiwicHJldmVudERlZmF1bHQiLCIkcHJldmlld0RpYWxvZyIsImFwcGVuZFRvIiwiZGlhbG9nIiwidGl0bGUiLCJ3aWR0aCIsImJ1dHRvbnMiLCJ0ZXh0IiwiY2xpY2siLCJ0b3AiLCJsb2NhdGlvbiIsImhyZWYiLCJidXR0b25UeXBlIiwic2hvd01vZGFsIiwiaXNJT1Nvck9wZXJhIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidG9Mb3dlckNhc2UiLCJtYXRjaCIsInBsYXRmb3JtIiwibWF4VG91Y2hQb2ludHMiLCJiaW5kIiwiYSIsImNsb3Nlc3QiLCJhdHRyIiwidHJpbSIsInRyaWdnZXJIYW5kbGVyIiwib3BlbiIsImpRdWVyeSJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGRidF9zdWJ0aGVtZS8uL3NyYy9qcy93ZWJmb3JtLmZvcm0udW5zYXZlZC5qcz9iZDA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVcbiAqIEphdmFTY3JpcHQgYmVoYXZpb3JzIGZvciB1bnNhdmVkIHdlYmZvcm1zLlxuICovXG5cbihmdW5jdGlvbiAoJCwgRHJ1cGFsKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciB1bnNhdmVkID0gZmFsc2U7XG4gIHZhciBtb2RhbCA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBVbnNhdmVkIGNoYW5nZXMuXG4gICAqXG4gICAqIEB0eXBlIHtEcnVwYWx+YmVoYXZpb3J9XG4gICAqXG4gICAqIEBwcm9wIHtEcnVwYWx+YmVoYXZpb3JBdHRhY2h9IGF0dGFjaFxuICAgKiAgIEF0dGFjaGVzIHRoZSBiZWhhdmlvciBmb3IgdW5zYXZlZCBjaGFuZ2VzLlxuICAgKi9cbiAgRHJ1cGFsLmJlaGF2aW9ycy53ZWJmb3JtVW5zYXZlZCA9IHtcbiAgICBjbGVhcjogZnVuY3Rpb24gKCkge1xuICAgICAgLy8gQWxsb3cgQWpheCByZWZyZXNoL3JlZGlyZWN0IHRvIGNsZWFyIHVuc2F2ZWQgZmxhZy5cbiAgICAgIC8vIEBzZWUgRHJ1cGFsLkFqYXhDb21tYW5kcy5wcm90b3R5cGUud2ViZm9ybVJlZnJlc2hcbiAgICAgIHVuc2F2ZWQgPSBmYWxzZTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgLy8gR2V0IHRoZSBjdXJyZW50IHVuc2F2ZWQgZmxhZyBzdGF0ZS5cbiAgICAgIHJldHVybiB1bnNhdmVkO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIC8vIFNldCB0aGUgY3VycmVudCB1bnNhdmVkIGZsYWcgc3RhdGUuXG4gICAgICB1bnNhdmVkID0gdmFsdWU7XG4gICAgfSxcbiAgICBhdHRhY2g6IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAvLyBMb29rIGZvciB0aGUgJ2RhdGEtd2ViZm9ybS11bnNhdmVkJyBhdHRyaWJ1dGUgd2hpY2ggaW5kaWNhdGVzIHRoYXRcbiAgICAgIC8vIGEgbXVsdGktc3RlcCB3ZWJmb3JtIGhhcyB1bnNhdmVkIGRhdGEuXG4gICAgICAvLyBAc2VlIFxcRHJ1cGFsXFx3ZWJmb3JtXFxXZWJmb3JtU3VibWlzc2lvbkZvcm06OmJ1aWxkRm9ybVxuXG4gICAgICBpZiAoJCgnLmpzLXdlYmZvcm0tdW5zYXZlZFtkYXRhLXdlYmZvcm0tdW5zYXZlZF0nKS5vbmNlKCdkYXRhLXdlYmZvcm0tdW5zYXZlZCcpLmxlbmd0aCkge1xuICAgICAgICB1bnNhdmVkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICAkKCcuanMtd2ViZm9ybS11bnNhdmVkIDppbnB1dDpub3QoOmJ1dHRvbiwgOnN1Ym1pdCwgOnJlc2V0LCBbdHlwZT1cImhpZGRlblwiXSknKS5vbmNlKCd3ZWJmb3JtLXVuc2F2ZWQnKS5vbignY2hhbmdlIGtleXByZXNzJywgZnVuY3Rpb24gKGV2ZW50LCBwYXJhbTEpIHtcbiAgICAgICAgICAvLyBJZ25vcmUgZXZlbnRzIHRyaWdnZXJlZCB3aGVuICNzdGF0ZXMgQVBJIGlzIGNoYW5nZWQsXG4gICAgICAgICAgLy8gd2hpY2ggcGFzc2VzICd3ZWJmb3JtLnN0YXRlcycgYXMgcGFyYW0xLlxuICAgICAgICAgIC8vIEBzZWUgd2ViZm9ybS5zdGF0ZXMuanMgOjp0cmlnZ2VyRXZlbnRIYW5kbGVycygpLlxuICAgICAgICAgIGlmIChwYXJhbTEgIT09ICd3ZWJmb3JtLnN0YXRlcycpIHtcbiAgICAgICAgICAgIHVuc2F2ZWQgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgICQoJy5qcy13ZWJmb3JtLXVuc2F2ZWQgYnV0dG9uLCAuanMtd2ViZm9ybS11bnNhdmVkIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0nLCBjb250ZXh0KVxuICAgICAgICAub25jZSgnd2ViZm9ybS11bnNhdmVkJylcbiAgICAgICAgLm5vdCgnW2RhdGEtd2ViZm9ybS11bnNhdmVkLWlnbm9yZV0nKVxuICAgICAgICAub24oJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgLy8gRm9yIHJlc2V0IGJ1dHRvbiB3ZSBtdXN0IGNvbmZpcm0gdW5zYXZlZCBjaGFuZ2VzIGJlZm9yZSB0aGVcbiAgICAgICAgICAvLyBiZWZvcmUgdW5sb2FkIGV2ZW50IGhhbmRsZXIuXG4gICAgICAgICAgaWYgKCQodGhpcykuaGFzQ2xhc3MoJ3dlYmZvcm0tYnV0dG9uLS1yZXNldCcpICYmIHVuc2F2ZWQpIHtcbiAgICAgICAgICAgIGlmICghd2luZG93LmNvbmZpcm0oRHJ1cGFsLnQoJ0NoYW5nZXMgeW91IG1hZGUgbWF5IG5vdCBiZSBzYXZlZC4nKSArICdcXG5cXG4nICsgRHJ1cGFsLnQoJ1ByZXNzIE9LIHRvIGxlYXZlIHRoaXMgcGFnZSBvciBDYW5jZWwgdG8gc3RheS4nKSkpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHVuc2F2ZWQgPSBmYWxzZTtcbiAgICAgICAgfSk7XG5cbiAgICAgIC8vIEFkZCBzdWJtaXQgaGFuZGxlciB0byBmb3JtLmJlZm9yZVNlbmQuXG4gICAgICAvLyBVcGRhdGUgRHJ1cGFsLkFqYXgucHJvdG90eXBlLmJlZm9yZVNlbmQgb25seSBvbmNlLlxuICAgICAgaWYgKHR5cGVvZiBEcnVwYWwuQWpheCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIERydXBhbC5BamF4LnByb3RvdHlwZS5iZWZvcmVTdWJtaXRXZWJmb3JtVW5zYXZlZE9yaWdpbmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBEcnVwYWwuQWpheC5wcm90b3R5cGUuYmVmb3JlU3VibWl0V2ViZm9ybVVuc2F2ZWRPcmlnaW5hbCA9IERydXBhbC5BamF4LnByb3RvdHlwZS5iZWZvcmVTdWJtaXQ7XG4gICAgICAgIERydXBhbC5BamF4LnByb3RvdHlwZS5iZWZvcmVTdWJtaXQgPSBmdW5jdGlvbiAoZm9ybV92YWx1ZXMsIGVsZW1lbnRfc2V0dGluZ3MsIG9wdGlvbnMpIHtcbiAgICAgICAgICB1bnNhdmVkID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuYmVmb3JlU3VibWl0V2ViZm9ybVVuc2F2ZWRPcmlnaW5hbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvLyBUcmFjayBhbGwgQ0tFZGl0b3IgY2hhbmdlIGV2ZW50cy5cbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9ja2VkaXRvci5jb20vb2xkL2ZvcnVtcy9TdXBwb3J0L0NLRWRpdG9yLWpRdWVyeS1jaGFuZ2UtZXZlbnRcbiAgICAgIGlmICh3aW5kb3cuQ0tFRElUT1IgJiYgIUNLRURJVE9SLndlYmZvcm1VbnNhdmVkKSB7XG4gICAgICAgIENLRURJVE9SLndlYmZvcm1VbnNhdmVkID0gdHJ1ZTtcbiAgICAgICAgQ0tFRElUT1Iub24oJ2luc3RhbmNlQ3JlYXRlZCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIGV2ZW50LmVkaXRvci5vbignY2hhbmdlJywgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICAgICAgdW5zYXZlZCA9IHRydWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgJCgnYScpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGxldCBjb250YWluaW5nRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Zvcm0nKTtcbiAgICBpZiAodW5zYXZlZCAmJiAhY29udGFpbmluZ0VsZW1lbnQuY29udGFpbnMoIGV2ZW50LnRhcmdldCApKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgJHByZXZpZXdEaWFsb2cgPSAkKFxuICAgICAgICBgPGRpdj48L2Rpdj5gLFxuICAgICAgKS5hcHBlbmRUbygnYm9keScpO1xuICAgICAgRHJ1cGFsLmRpYWxvZygkcHJldmlld0RpYWxvZywge1xuICAgICAgICB0aXRsZTogRHJ1cGFsLnQoJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBsZWF2ZT8gTGVhdmUgd2l0aG91dCBzYXZpbmcuJyksXG4gICAgICAgIHdpZHRoOiAnMzMlJyxcbiAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRleHQ6IERydXBhbC50KCdMZWF2ZSB0aGUgYXBwbGljYXRpb24nKSxcbiAgICAgICAgICAgIGNsaWNrKCkge1xuICAgICAgICAgICAgICB1bnNhdmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICQodGhpcykuZGlhbG9nKCdjbG9zZScpO1xuICAgICAgICAgICAgICBtb2RhbCA9IHRydWU7XG4gICAgICAgICAgICAgIHdpbmRvdy50b3AubG9jYXRpb24uaHJlZiA9IGV2ZW50LnRhcmdldC5ocmVmO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRleHQ6IERydXBhbC50KCdCYWNrIHRvIGFwcGxpY2F0aW9uJyksXG4gICAgICAgICAgICBidXR0b25UeXBlOiAnc2Vjb25kYXJ5JyxcbiAgICAgICAgICAgIGNsaWNrKCkge1xuICAgICAgICAgICAgICAkKHRoaXMpLmRpYWxvZygnY2xvc2UnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgIH0pLnNob3dNb2RhbCgpO1xuICAgIH1cbiAgfSlcbiAgJCh3aW5kb3cpLm9uKCdiZWZvcmV1bmxvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHVuc2F2ZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAobW9kYWwpIHtcbiAgICAgIG1vZGFsID0gZmFsc2U7XG4gICAgICB1bnNhdmVkID0gdHJ1ZTtcbiAgICB9XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBBbiBleHBlcmltZW50YWwgc2hpbSB0byBwYXJ0aWFsbHkgZW11bGF0ZSBvbkJlZm9yZVVubG9hZCBvbiBpT1MuXG4gICAqIFBhcnQgb2YgaHR0cHM6Ly9naXRodWIuY29tL2NvZGVkYW5jZS9qcXVlcnkuQXJlWW91U3VyZS9cbiAgICpcbiAgICogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTQsIENocmlzIERhbmNlIGFuZCBQYXBlckN1dCBTb2Z0d2FyZSBodHRwOi8vd3d3LnBhcGVyY3V0LmNvbS9cbiAgICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIG9yIEdQTCBWZXJzaW9uIDIgbGljZW5zZXMuXG4gICAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAgICpcbiAgICogQXV0aG9yOiAgY2hyaXMuZGFuY2VAcGFwZXJjdXQuY29tXG4gICAqIERhdGU6ICAgIDE5dGggTWF5IDIwMTRcbiAgICovXG4gICQoZnVuY3Rpb24gKCkge1xuICAgIC8vIEBzZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTgwMTk0NjMvaG93LXRvLWRldGVjdC1kZXZpY2UtbmFtZS1pbi1zYWZhcmktb24taW9zLTEzLXdoaWxlLWl0LWRvZXNudC1zaG93LXRoZS1jb3JyZWN0XG4gICAgdmFyIGlzSU9Tb3JPcGVyYSA9IG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5tYXRjaCgvaXBob25lfGlwYWR8aXBvZHxvcGVyYS8pXG4gICAgICB8fCBuYXZpZ2F0b3IucGxhdGZvcm0udG9Mb3dlckNhc2UoKS5tYXRjaCgvaXBob25lfGlwYWR8aXBvZC8pXG4gICAgICB8fCAobmF2aWdhdG9yLnBsYXRmb3JtID09PSAnTWFjSW50ZWwnICYmIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyA+IDEpO1xuICAgIGlmICghaXNJT1Nvck9wZXJhKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgJCgnYTpub3QoLnVzZS1hamF4KScpLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgdmFyIGEgPSAkKGV2dC50YXJnZXQpLmNsb3Nlc3QoJ2EnKTtcbiAgICAgIHZhciBocmVmID0gYS5hdHRyKCdocmVmJyk7XG4gICAgICBpZiAodHlwZW9mIGhyZWYgIT09ICd1bmRlZmluZWQnICYmICEoaHJlZi5tYXRjaCgvXiMvKSB8fCBocmVmLnRyaW0oKSA9PT0gJycpKSB7XG4gICAgICAgIGlmICgkKHdpbmRvdykudHJpZ2dlckhhbmRsZXIoJ2JlZm9yZXVubG9hZCcpKSB7XG5cbiAgICAgICAgICBpZiAoIXdpbmRvdy5jb25maXJtKERydXBhbC50KCdDaGFuZ2VzIHlvdSBtYWRlIG1heSBub3QgYmUgc2F2ZWQuJykgKyAnXFxuXFxuJyArIERydXBhbC50KCdQcmVzcyBPSyB0byBsZWF2ZSB0aGlzIHBhZ2Ugb3IgQ2FuY2VsIHRvIHN0YXkuJykpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciB0YXJnZXQgPSBhLmF0dHIoJ3RhcmdldCcpO1xuICAgICAgICBpZiAodGFyZ2V0KSB7XG4gICAgICAgICAgd2luZG93Lm9wZW4oaHJlZiwgdGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxufSkoalF1ZXJ5LCBEcnVwYWwpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDLFVBQVVBLENBQUMsRUFBRUMsTUFBTSxFQUFFO0VBRXBCLFlBQVk7O0VBRVosSUFBSUMsT0FBTyxHQUFHLEtBQUs7RUFDbkIsSUFBSUMsS0FBSyxHQUFHLEtBQUs7O0VBRWpCO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUYsTUFBTSxDQUFDRyxTQUFTLENBQUNDLGNBQWMsR0FBRztJQUNoQ0MsS0FBSyxFQUFFLFlBQVk7TUFDakI7TUFDQTtNQUNBSixPQUFPLEdBQUcsS0FBSztJQUNqQixDQUFDO0lBQ0RLLEdBQUcsRUFBRSxZQUFZO01BQ2Y7TUFDQSxPQUFP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\n//# sourceURL=webpack-internal:///./src/js/webform.form.unsaved.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/webform.form.unsaved.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=webform.form.unsaved.min.js.map