/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/webform.form.unsaved.js":
/*!****************************************!*\
  !*** ./src/js/webform.form.unsaved.js ***!
  \****************************************/
/***/ (function() {

eval("/**\n * @file\n * JavaScript behaviors for unsaved webforms.\n */\n\n(function ($, Drupal) {\n  'use strict';\n\n  var unsaved = false;\n  var modal = false;\n\n  /**\n   * Unsaved changes.\n   *\n   * @type {Drupal~behavior}\n   *\n   * @prop {Drupal~behaviorAttach} attach\n   *   Attaches the behavior for unsaved changes.\n   */\n  Drupal.behaviors.webformUnsaved = {\n    clear: function () {\n      // Allow Ajax refresh/redirect to clear unsaved flag.\n      // @see Drupal.AjaxCommands.prototype.webformRefresh\n      unsaved = false;\n    },\n    get: function () {\n      // Get the current unsaved flag state.\n      return unsaved;\n    },\n    set: function (value) {\n      // Set the current unsaved flag state.\n      unsaved = value;\n    },\n    attach: function (context) {\n      // Look for the 'data-webform-unsaved' attribute which indicates that\n      // a multi-step webform has unsaved data.\n      // @see \\Drupal\\webform\\WebformSubmissionForm::buildForm\n\n      if ($('.js-webform-unsaved[data-webform-unsaved]').once('data-webform-unsaved').length) {\n        unsaved = true;\n      } else {\n        $('.js-webform-unsaved :input:not(:button, :submit, :reset, [type=\"hidden\"])').once('webform-unsaved').on('change keypress', function (event, param1) {\n          // Ignore events triggered when #states API is changed,\n          // which passes 'webform.states' as param1.\n          // @see webform.states.js ::triggerEventHandlers().\n          if (param1 !== 'webform.states') {\n            unsaved = true;\n          }\n        });\n      }\n      $('.js-webform-unsaved button, .js-webform-unsaved input[type=\"submit\"]', context).once('webform-unsaved').not('[data-webform-unsaved-ignore]').on('click', function (event) {\n        // For reset button we must confirm unsaved changes before the\n        // before unload event handler.\n        if ($(this).hasClass('webform-button--reset') && unsaved) {\n          if (!window.confirm(Drupal.t('Changes you made may not be saved.') + '\\n\\n' + Drupal.t('Press OK to leave this page or Cancel to stay.'))) {\n            return false;\n          }\n        }\n        unsaved = false;\n      });\n\n      // Add submit handler to form.beforeSend.\n      // Update Drupal.Ajax.prototype.beforeSend only once.\n      if (typeof Drupal.Ajax !== 'undefined' && typeof Drupal.Ajax.prototype.beforeSubmitWebformUnsavedOriginal === 'undefined') {\n        Drupal.Ajax.prototype.beforeSubmitWebformUnsavedOriginal = Drupal.Ajax.prototype.beforeSubmit;\n        Drupal.Ajax.prototype.beforeSubmit = function (form_values, element_settings, options) {\n          unsaved = false;\n          return this.beforeSubmitWebformUnsavedOriginal.apply(this, arguments);\n        };\n      }\n\n      // Track all CKEditor change events.\n      // @see https://ckeditor.com/old/forums/Support/CKEditor-jQuery-change-event\n      if (window.CKEDITOR && !CKEDITOR.webformUnsaved) {\n        CKEDITOR.webformUnsaved = true;\n        CKEDITOR.on('instanceCreated', function (event) {\n          event.editor.on('change', function (evt) {\n            unsaved = true;\n          });\n        });\n      }\n    }\n  };\n  $('a').on('click', function (event) {\n    let containingElement = document.querySelector('form');\n    if (unsaved && !containingElement.contains(event.target)) {\n      event.preventDefault();\n      const $previewDialog = $(`<div></div>`).appendTo('body');\n      Drupal.dialog($previewDialog, {\n        title: Drupal.t('You have unsaved changes. Changes you have made may not be saved.'),\n        width: '50%',\n        buttons: [{\n          text: Drupal.t('Cancel'),\n          click() {\n            $(this).dialog('close');\n          }\n        }, {\n          text: Drupal.t('Leave the Form'),\n          click() {\n            unsaved = false;\n            $(this).dialog('close');\n            modal = true;\n            window.top.location.href = event.target.href;\n          }\n        }]\n      }).showModal();\n    }\n  });\n  $(window).on('beforeunload', function () {\n    if (unsaved) {\n      return true;\n    }\n    if (modal) {\n      modal = false;\n      unsaved = true;\n    }\n  });\n\n  /**\n   * An experimental shim to partially emulate onBeforeUnload on iOS.\n   * Part of https://github.com/codedance/jquery.AreYouSure/\n   *\n   * Copyright (c) 2012-2014, Chris Dance and PaperCut Software http://www.papercut.com/\n   * Dual licensed under the MIT or GPL Version 2 licenses.\n   * http://jquery.org/license\n   *\n   * Author:  chris.dance@papercut.com\n   * Date:    19th May 2014\n   */\n  $(function () {\n    // @see https://stackoverflow.com/questions/58019463/how-to-detect-device-name-in-safari-on-ios-13-while-it-doesnt-show-the-correct\n    var isIOSorOpera = navigator.userAgent.toLowerCase().match(/iphone|ipad|ipod|opera/) || navigator.platform.toLowerCase().match(/iphone|ipad|ipod/) || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (!isIOSorOpera) {\n      return;\n    }\n    $('a:not(.use-ajax)').bind('click', function (evt) {\n      var a = $(evt.target).closest('a');\n      var href = a.attr('href');\n      if (typeof href !== 'undefined' && !(href.match(/^#/) || href.trim() === '')) {\n        if ($(window).triggerHandler('beforeunload')) {\n          if (!window.confirm(Drupal.t('Changes you made may not be saved.') + '\\n\\n' + Drupal.t('Press OK to leave this page or Cancel to stay.'))) {\n            return false;\n          }\n        }\n        var target = a.attr('target');\n        if (target) {\n          window.open(href, target);\n        } else {\n          window.location.href = href;\n        }\n        return false;\n      }\n    });\n  });\n})(jQuery, Drupal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/webform.form.unsaved.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/webform.form.unsaved.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=webform.form.unsaved.min.js.map